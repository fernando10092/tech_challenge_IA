# üìà Sistema de Previs√£o de Ativos Financeiros com IA

Este projeto √© uma aplica√ß√£o web desenvolvida em Django que integra um modelo de Machine Learning (Regress√£o Log√≠stica) para prever a tend√™ncia (gain ou loss) de ativos financeiros. A aplica√ß√£o busca dados de uma API, processa-os e exibe um gr√°fico de hist√≥rico de pre√ßos junto com a previs√£o da IA para um ativo espec√≠fico.

## üåü Funcionalidades

- **Coleta de Dados Autom√°tica:** Extrai dados de pre√ßos de ativos de uma API externa e os armazena em arquivos locais para uso futuro.
- **Treinamento de Modelo de IA:** Utiliza dados hist√≥ricos para treinar um modelo de Regress√£o Log√≠stica, que √© ent√£o salvo para predi√ß√µes r√°pidas.
- **Visualiza√ß√£o Interativa:** Gera um gr√°fico de linha do hist√≥rico de pre√ßos de um ativo selecionado pelo usu√°rio.
- **Predi√ß√£o de Tend√™ncia:** Fornece uma previs√£o de "Gain" (alta) ou "Loss" (baixa) para o dia seguinte, baseada no modelo de IA.
- **Interface Web:** Apresenta todas as funcionalidades em uma interface de usu√°rio simples e limpa, constru√≠da com HTML e CSS.

## üõ†Ô∏è Tecnologias Utilizadas

- **Python**: Linguagem de programa√ß√£o principal.
- **Django**: Framework web para a constru√ß√£o da aplica√ß√£o.
- **Django REST Framework**: Utilizado para criar a view da API.
- **Pandas**: Para manipula√ß√£o e an√°lise de dados.
- **Matplotlib**: Para a gera√ß√£o dos gr√°ficos.
- **Scikit-learn**: Biblioteca de Machine Learning para o modelo de Regress√£o Log√≠stica.
- **Joblib**: Para serializar e carregar o modelo treinado.
- **Requests**: Para fazer requisi√ß√µes √† API de dados.

## üöÄ Como Executar o Projeto

Siga os passos abaixo para configurar e rodar o projeto localmente.

### Pr√©-requisitos
Certifique-se de ter o Python 3.x instalado em sua m√°quina.

### 1. Configurar o Ambiente Virtual
Navegue at√© o diret√≥rio do projeto e crie e ative um ambiente virtual.

```bash
python -m venv env
# No Windows
env\Scripts\activate
# No macOS/Linux
source env/bin/activate